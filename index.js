"use strict";var require$$0$1=require("fs"),require$$0=require("path"),require$$2$1=require("minimist"),require$$1=require("chalk"),require$$2=require("cross-spawn"),require$$4=require("fs-extra");function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var require$$0__default$1=_interopDefaultLegacy(require$$0$1),require$$0__default=_interopDefaultLegacy(require$$0),require$$2__default$1=_interopDefaultLegacy(require$$2$1),require$$1__default=_interopDefaultLegacy(require$$1),require$$2__default=_interopDefaultLegacy(require$$2),require$$4__default=_interopDefaultLegacy(require$$4),commonjsGlobal="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function getDefaultExportFromCjs(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var es={},sync={},utils={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.globalInject=e.override=e.configCreate=e.mdResolver=e.descResolver=e.resolver=e.command=e.FileType=e.Action=void 0;const r=require$$0__default.default,o=require$$1__default.default;var n,i;(i=n=e.Action||(e.Action={})).COPY="COPY",i.REMOVE="REMOVE",i.CREATE="CREATE",i.EXTRACT="EXTRACT",i.PICK="PICK",(i=e.FileType||(e.FileType={})).FILE="FILE",i.FOLDER="FOLDER",e.command=({cmd:t=[]})=>{const o=require$$2__default.default;return new Promise((i,e)=>{0===t.length&&e(Error("没输入命令"));e=t.slice(1);o(t[0],e,{stdio:"inherit"}).on("close",e=>{console.log("close",e),i(e)})})},e.resolver=(i,t,o)=>e=>e.map(([e])=>({action:i?n.COPY:n.REMOVE,origin:i?r.resolve(i):null,target:t?r.join(e,t):r.join(e,i),changedCheckAndBackup:o}));e.descResolver=(i,t,o="desc")=>e=>e.map(([e])=>({action:n.CREATE,origin:t,target:r.join(e,i+"."+o),changedCheckAndBackup:!1}));e.mdResolver=(i,t,o="")=>e=>e.map(([e])=>({action:n.PICK,origin:r.resolve(i+".md"),target:r.join(e,i+o+".md"),changedCheckAndBackup:!1,anchors:t.filter(e=>"string"==typeof e?e:e.startWith).map(e=>({startWith:"string"==typeof e?`- ***${e}***`:e.startWith,endWith:"string"!=typeof e&&e.endWith||"---"}))})),e.configCreate=e=>{let i=[];for(const t of e.mapping||[])i=[...i,...t(e.workspaces)];for(const o of e.description||[])i=[...i,...o(e.workspaces)];return{gitPushHook:e.gitPushHook,gitPushOptions:e.gitPushOptions,workspaces:e.workspaces,mapping:i}},e.override=async()=>{globalThis.__console=globalThis.console,globalThis.console=new Proxy({},{get(e,i,t){return"log"===i?(...e)=>{globalThis.__console.log(...e.map((e,i)=>0===i?o.underline(o.bgGreen(o.white(` [${String(e)}] `))):o.green("[")+String(e)+o.green("]")))}:"error"===i?(...e)=>{globalThis.__console.log(...e.map((e,i)=>0===i?o.underline(o.bgRed(o.white(` [${String(e)}] `))):o.red(String(e))))}:void Reflect.get(e,i,t)}})};e.globalInject=()=>{globalThis.resolver=e.resolver,globalThis.descResolver=e.descResolver,globalThis.configCreate=e.configCreate,globalThis.mdResolver=e.mdResolver}}(utils),Object.defineProperty(sync,"__esModule",{value:!0}),sync.run=void 0;const fs=require$$0__default$1.default,path=require$$0__default.default,minimist=require$$2__default$1.default,utils_1=utils,fsExtra=require$$4__default.default,run=async()=>{(0,utils_1.globalInject)(),await(0,utils_1.override)();var e,i,t=minimist(process.argv.slice(2));let n=null;if(!(n=t.c?require(path.resolve(t.c)):require(path.resolve(".syncrc.js"))))throw t="The config file not exist.",console.log("Error",t),Error(t);for(let r in n.mapping)if(n.mapping[r].action===utils_1.Action.CREATE)console.log(n.mapping[r].action,n.mapping[r].origin,n.mapping[r].target),await new Promise((i,t)=>fs.writeFile(n.mapping[r].target,n.mapping[r].origin,e=>{e?t(e):i(null)}));else if(n.mapping[r].action===utils_1.Action.PICK){console.log(n.mapping[r].action,n.mapping[r].origin,n.mapping[r].target);var o=await new Promise((t,o)=>fs.readFile(n.mapping[r].origin,(e,i)=>{e?o(e):t(i)}));let e=[],i=(n.mapping[r].anchors||(e=[String(o)]),String(o));for(const c in n.mapping[r].anchors){var a=n.mapping[r].anchors[c];if(-1!==i.indexOf(a.startWith)&&-1!==i.indexOf(a.endWith)&&a.startWith!==a.endWith){var l=i.split(a.startWith??null),l=(i=1<l.length?a.startWith+l.slice(1).join(a.startWith):i).split(a.endWith??null);if(""===(i=1<l.length?(e.push(l[0]+a.endWith),l.slice(1).join(a.endWith)):(e.push(i),"")))break}}await new Promise((i,t)=>fs.writeFile(n.mapping[r].target,e.join("\n"),e=>{e?t(e):i(null)}))}else n.mapping[r].action===utils_1.Action.COPY?(console.log(n.mapping[r].action+" - Compare:"+n.mapping[r].changedCheckAndBackup,n.mapping[r].origin,n.mapping[r].target),o=await new Promise((t,o)=>{fs.stat(n.mapping[r].origin,(e,i)=>{e?(console.error("ERROR",e),t(null)):i.isFile()?t(utils_1.FileType.FILE):i.isDirectory()?t(utils_1.FileType.FOLDER):o("not file and not folder")})}),e=await new Promise((t,o)=>{fs.stat(n.mapping[r].target,(e,i)=>{e?(console.error("ERROR",e),t(null)):i.isFile()?t(utils_1.FileType.FILE):i.isDirectory()?t(utils_1.FileType.FOLDER):o("not file and not folder")})}),o===utils_1.FileType.FILE&&e===utils_1.FileType.FILE&&n.mapping[r].changedCheckAndBackup&&(e=await new Promise((t,o)=>fs.readFile(n.mapping[r].origin,(e,i)=>{e?o(e):t(i)})),i=await new Promise((t,o)=>fs.readFile(n.mapping[r].target,(e,i)=>{e?o(e):t(i)})),String(e).trim()==String(i).trim()?(console.log("Same",!0),console.log("Backup",!1)):(console.log("Same",!1),await new Promise((i,t)=>fs.rename(n.mapping[r].target,n.mapping[r].target+".backup",e=>{e?t(e):i(null)})),console.log("Backup",n.mapping[r].target+".backup"))),await fsExtra.copy(n.mapping[r].origin,n.mapping[r].target)):n.mapping[r].action===utils_1.Action.REMOVE&&(console.log(n.mapping[r].action,n.mapping[r].origin,n.mapping[r].target),await fsExtra.remove(n.mapping[r].target));for(const p in n.workspaces){var[r,s]=n.workspaces[p];s&&(n.gitPushHook?"string"==typeof n.gitPushHook?await(0,utils_1.command)({cmd:["sh",path.resolve(n.gitPushHook),r,n.gitPushOptions?.origin||"master",n.gitPushOptions?.comments||"Auto sync module"]}):"function"==typeof n.gitPushHook&&await n.gitPushHook(n.workspaces[p],utils_1.command,globalThis.__console):(s=r,await(r=void 0,utils_1.command)({cmd:["sh",path.join(__dirname,"gitpush.sh"),s,r?.origin||"master",r?.comments||"Common Module Sync"]})))}};sync.run=run,function(e){var o=commonjsGlobal&&commonjsGlobal.__createBinding||(Object.create?function(e,i,t,o){void 0===o&&(o=t);var r=Object.getOwnPropertyDescriptor(i,t);r&&("get"in r?i.__esModule:!r.writable&&!r.configurable)||(r={enumerable:!0,get:function(){return i[t]}}),Object.defineProperty(e,o,r)}:function(e,i,t,o){e[o=void 0===o?t:o]=i[t]}),i=commonjsGlobal&&commonjsGlobal.__exportStar||function(e,i){for(var t in e)"default"===t||Object.prototype.hasOwnProperty.call(i,t)||o(i,e,t)};Object.defineProperty(e,"__esModule",{value:!0}),i(sync,e),i(utils,e)}(es);var index=getDefaultExportFromCjs(es);module.exports=index;
